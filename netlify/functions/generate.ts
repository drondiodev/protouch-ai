import { GoogleGenAI, Modality } from "@google/genai";
import type { Handler } from "@netlify/functions";

export const handler: Handler = async (event, context) => {
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: 'Method Not Allowed' };
  }

  const apiKey = process.env.API_KEY;
  if (!apiKey) {
    console.error("API_KEY environment variable not set in Netlify function environment.");
    return { statusCode: 500, body: JSON.stringify({ error: 'API key not configured on the server.' }) };
  }

  try {
    if (!event.body) {
      return { statusCode: 400, body: JSON.stringify({ error: 'Request body is missing.' }) };
    }
    const { base64Image, mimeType, prompt } = JSON.parse(event.body);

    if (!base64Image || !mimeType || !prompt) {
      return { statusCode: 400, body: JSON.stringify({ error: 'Missing required parameters: base64Image, mimeType, or prompt.' }) };
    }

    const ai = new GoogleGenAI({ apiKey });

    const imagePart = {
      inlineData: {
        data: base64Image,
        mimeType: mimeType,
      },
    };

    const textPart = {
      text: prompt,
    };

    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image',
      contents: {
        parts: [imagePart, textPart],
      },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    if (response.candidates && response.candidates[0].content.parts[0].inlineData) {
      const generatedImagePart = response.candidates[0].content.parts.find(
        (part) => part.inlineData && part.inlineData.mimeType.startsWith('image/')
      );

      if (generatedImagePart && generatedImagePart.inlineData) {
        const base64Data = generatedImagePart.inlineData.data;
        const mimeType = generatedImagePart.inlineData.mimeType;
        const dataUrl = `data:${mimeType};base64,${base64Data}`;
        return {
          statusCode: 200,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ imageUrl: dataUrl }),
        };
      }
    }
    
    console.error("AI response did not contain an image.", JSON.stringify(response));
    throw new Error("No image was generated by the AI.");

  } catch (error) {
    console.error("Error in Netlify function:", error);
    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';
    return {
      statusCode: 500,
      body: JSON.stringify({ error: `Failed to communicate with the AI service. Details: ${errorMessage}` }),
    };
  }
};
